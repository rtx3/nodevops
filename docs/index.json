[{"categories":[""],"contents":"Acknowledgements The iOS version of PickCook depends on the following open source components:\ncook MIT License Copyright (c) 2022 云游君 YunYouJun \u0026lt;me@yunyoujun.cn\u0026gt; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026#34;Software\u0026#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u0026#34;AS IS\u0026#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. HowToCook This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \u0026#34;AS IS\u0026#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to \u0026lt;https://unlicense.org\u0026gt; ","permalink":"https://rtx3.com/post/acknowledgements-cook/","tags":[""],"title":"Acknowledgements-COOK"},{"categories":[""],"contents":"Ionic ios app打包 保证capacitor版本一致：\n\u0026#34;@capacitor/android\u0026#34;: \u0026#34;^5.5.1\u0026#34;, \u0026#34;@capacitor/app\u0026#34;: \u0026#34;^5.0.6\u0026#34;, \u0026#34;@capacitor/haptics\u0026#34;: \u0026#34;^5.0.6\u0026#34;, \u0026#34;@capacitor/ios\u0026#34;: \u0026#34;^5.5.1\u0026#34;, \u0026#34;@capacitor/keyboard\u0026#34;: \u0026#34;^5.0.6\u0026#34;, \u0026#34;@capacitor/status-bar\u0026#34;: \u0026#34;^5.0.6\u0026#34; 使用npx cap add ios增加ios打包\n确保配置目录正确：\nconst config: CapacitorConfig = { appId: \u0026#39;com.example.app\u0026#39;, appName: \u0026#39;Example-App\u0026#39;, webDir: \u0026#39;./.output/public\u0026#39;, bundledWebRuntime: false }; App connect 中建立app\n","permalink":"https://rtx3.com/post/ios%E4%B8%8A%E6%9E%B6/","tags":[""],"title":"IOS上架"},{"categories":[""],"contents":"本应用尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本应用会按照本隐私权政策的规定使用和披露您的个人信息。但本应用将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本应用不会将这些信息对外披露或向第三方提供。本应用会不时更新本隐私权政策。 您在同意本应用服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本应用服务使用协议不可分割的一部分。\n适用范围 (a) 在您在使用本应用时，您根据本应用要求提供的个人注册信息；\n(b) 在您使用本应用网络服务，或访问本应用平台网页时，本应用自动接收并记录的您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；\n(c) 本应用通过合法途径从商业伙伴处取得的用户个人数据。\n您了解并同意，以下信息不适用本隐私权政策：\n(a) 您在使用本应用平台提供的搜索服务时输入的关键字信息；\n(b) 本应用收集到的您在本应用发布的有关信息数据，包括但不限于参与活动、成交信息及评价详情；\n(c) 违反法律规定或违反本应用规则行为及本应用已对您采取的措施。\n信息使用 (a)本应用不会向任何无关第三方提供、出售、出租、分享或交易您的个人信息，除非事先得到您的许可，或该第三方和本应用（含本应用关联公司）单独或共同为您提供服务，且在该服务结束后，其将被禁止访问包括其以前能够访问的所有这些资料。\n(b) 本应用亦不允许任何第三方以任何手段收集、编辑、出售或者无偿传播您的个人信息。任何本应用平台用户如从事上述活动，一经发现，本应用有权立即终止与该用户的服务协议。\n(c) 为服务用户的目的，本应用可能通过使用您的个人信息，向您提供您感兴趣的信息，包括但不限于向您发出产品和服务信息，或者与本应用合作伙伴共享信息以便他们向您发送有关其产品和服务的信息（后者需要您的事先同意）。\n信息披露 在如下情况下，本应用将依据您的个人意愿或法律的规定全部或部分的披露您的个人信息：\n(a) 经您事先同意，向第三方披露；\n(b)为提供您所要求的产品和服务，而必须和第三方分享您的个人信息；\n(c) 根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；\n(d) 如您出现违反中国有关法律、法规或者本应用服务协议或相关规则的情况，需要向第三方披露；\n(e) 如您是适格的知识产权投诉人并已提起投诉，应被投诉人要求，向被投诉人披露，以便双方处理可能的权利纠纷；\n(f) 在本应用平台上创建的某一交易中，如交易任何一方履行或部分履行了交易义务并提出信息披露请求的，本应用有权决定向该用户提供其交易对方的联络方式等必要信息，以促成交易的完成或纠纷的解决。\n(g) 其它本应用根据法律、法规或者网站政策认为合适的披露。\n信息存储和交换 本应用收集的有关您的信息和资料将保存在本应用及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本应用收集信息和资料所在地的境外并在境外被访问、存储和展示。\n本隐私政策的更改 (a)如果决定更改隐私政策，我们会在本政策中、本公司网站中以及我们认为适当的位置发布这些更改，以便您了解我们如何收集、使用您的个人信息，哪些人可以访问这些信息，以及在什么情况下我们会透露这些信息。\n(b)本人保留随时修改本政策的权利，因此请经常查看。如对本政策作出重大更改，本人会通过网站通知的形式告知。\n","permalink":"https://rtx3.com/post/%E9%9A%90%E7%A7%81%E5%8D%8F%E8%AE%AE-cook/","tags":[""],"title":"隐私协议-COOK"},{"categories":["教程"],"contents":"使用阿里云函数计算反向代理AI服务 Simon (Yu Ma) 收录于 类别 杂技浅尝\n2023-11-17 00:16 2023-11-17 00:16 约 1076 字 预计阅读 3 分钟 392 次阅读 7 条评论\n本文的主要思路是使用阿里云的函数计算服务来代理 OpenAI 的 API 地址，配合自己的域名即可在境内实现访问。\n至于是不是永久免费，我不知道。但是每个人都有点免费额度，个人做技术探究应该是够用了。\n前期准备 需要一个阿里云账号， 没有账号的可自行注册( 点击此处注册 ) 需要一个自己注册的域名， 没有的可以注册 ( 点击注册域名 ) 创建代理服务 1. 登录并开通函数计算服务 登录地址：https://fcnext.console.aliyun.com/overview\n2. 通过模板创建Nginx应用 这是整个过程中最重要的一步！\n首先在函数计算管理的应用面板，找到创建应用。\n选择 通过模板创建应用， 在搜索框输入 Nginx ，找到对应模板 立即创建\n填写一些服务关键信息。 这里要注意一下几个点\n选择 直接部署 区域选择可以访问OpenAI的区域，例如：日本、美国、新加坡等 函数名、角色等信息不要修改 3 Nginx配置修改 在函数及服务 面板中，找到刚创建的服务，点击进入 Nginx\n选择函数代码，并进行编辑，仅修改 nginx.conf 即可， 代码全文如下:\n| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 | # nginx -c /code/nginx.conf -g 'daemon off;' events { worker_connections 1024; } http { server { error_log /dev/stderr; access_log /dev/stdout; gzip on; gzip_min_length 1k; gzip_comp_level 2; gzip_types text/html text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/svg+xml; gzip_vary on; gzip_disable \u0026quot;MSIE [1-6]\\.\u0026quot;; include /etc/nginx/mime.types; add_header Access-Control-Allow-Origin *; proxy_set_header Host api.openai.com; proxy_http_version 1.1; proxy_set_header Host $host; listen 9000; location ~* ^\\/v1\\/((engines\\/.+\\/)?(?:chat\\/completions|completions|edits|moderations|answers|embeddings))$ { proxy_pass https://api.openai.com; proxy_set_header Connection ''; proxy_read_timeout 8m; proxy_ignore_headers Cache-Control; client_body_buffer_size 4m; proxy_ssl_server_name on; proxy_ssl_session_reuse off; } location /v1 { proxy_pass https://api.openai.com; proxy_ssl_server_name on; proxy_ssl_session_reuse off; } } } | | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | | | |\n别忘了部署代码\n4 域名绑定 由于阿里云提供的默认公网访问地址是不能进行函数服务的，我们需要配置自己的域名。\n通过函数计算面板，找到域名管理页面，并进入添加自定义域名\n注意以下标出的几个重要信息\n域名输入后，先去解析 CNAME，如果没有解析，最终是无法提交的。 这一步不会做，自己去搜索引擎学习 路由配置 路径如图使用 /* 服务名称： 即为刚才创建的服务 函数名: nginx 版本: LATEST 强烈建议配置HTTPS 如果你已经有了，可以上传。 如果没有，直接使用免费的HTTPS申请教程: 点击学习 详细的配置文档：https://help.aliyun.com/zh/fc/user-guide/configure-a-custom-domain-name\n其他操作 Nginx服务资源调整(非必须) 由于模板考虑到的是通用性，所以Nginx的资源申请的比较大。对于反向代理Open AI服务来说，就是大材小用、资源浪费了，我们还是能省则省。\n从函数计算面板，找到服务及函数，找到Nginx服务，点击函数名进入 将Nginx调整为：0.1核, 128MB即可， 其他参数不要去修改 不要忘记保存 写在最后 之前我也是使用Cloudflare Worker 反代 Open AI的API，今天突然用不成了。此文仅抛砖引玉，用于个人技术研究。\n","permalink":"https://rtx3.com/post/nginx-proxy-ai/","tags":["安装","AI服务"],"title":"使用阿里云函数计算反向代理AI服务"},{"categories":["教程"],"contents":"统一登录开源服务Casdoor部署 统一登录是自动运维的基础以及基石，它可以极大的减少用户的管理成本。\n常用的统一登录方式有\nAD LDAP CAS OAUTH 开源服务提供了大部分的接入方式，并且依赖简单，值得使用。\n当使用在生产环境时，需使用K8S等方式实现高可用。\n！当使用在生产环境时，将管理人员使用的登录服务与普通用户使用的登录服务隔离。\nCasdoor features Casdoor follows a front-end and back-end separate architecture, developed by Golang. It supports high concurrency, provides a web-based UI for management, and supports localization in 10+ languages. Casdoor supports third-party application login, such as GitHub, Google, QQ, and WeChat, and it supports extending third-party login with plugins. Casdoor supports authorization management based on Casbin. It supports ACL, RBAC, ABAC, and RESTful access control models. Casdoor provides phone verification code, email verification code, and password retrieval functions. Casdoor supports auditing and recording of accessing logs. Casdoor integrates with Alibaba Cloud, Tencent Cloud, and Qiniu Cloud image CDN cloud storage. Casdoor allows customization of registration, login, and password retrieval pages. Casdoor supports integration with existing systems by database synchronization, enabling smooth transition to Casdoor. Casdoor supports mainstream databases such as MySQL, PostgreSQL, and SQL Server, and it supports the extension of new databases with plugins. How Casdoor Works Casdoor follows the authorization process built upon the OAuth 2.0 protocol. It is highly recommended to have a brief understanding of how OAuth 2.0 works. You can refer to this introduction to OAuth 2.0.\n![镜像](https://casdoor.org/zh/assets/images/oauth-2913ec44d8cf5851fd9dd7c359ed4e21.pn\nInstallation 注意事项\n如使用容器数据库，则去掉注释\nversion: \u0026#39;3.1\u0026#39; services: casdoor: restart: always image: casbin/casdoor:v1.428.0 entrypoint: /bin/sh -c \u0026#39;./server --createDatabase=true\u0026#39; ports: - \u0026#34;8000:8000\u0026#34; # depends_on: # - postgres environment: RUNNING_IN_DOCKER: \u0026#34;true\u0026#34; volumes: - ./conf:/conf/ #use local postgresql db #postgres: # image: postgres:12-alpine # user: postgres # environment: # POSTGRES_USER: postgres # POSTGRES_PASSWORD: p0stgr3s # PGDATA: /var/lib/postgresql/data/pgdata # healthcheck: # test: [\u0026#34;CMD-SHELL\u0026#34;, \u0026#34;pg_isready\u0026#34;] # interval: 10s # timeout: 5s # retries: 5 # volumes: # - /srv/postgresql/data:/var/lib/postgresql/data 配置文件：\nappname = casdoor httpport = 9000 runmode = dev SessionOn = true copyrequestbody = true driverName = postgres dataSourceName = \u0026#34;user=postgres password=p0stgr3s host=localhost port=5432 sslmode=disable dbname=casdoor\u0026#34; dbName = casdoor tableNamePrefix = showSql = false redisEndpoint = defaultStorageProvider = isCloudIntranet = false authState = \u0026#34;casdoor\u0026#34; socks5Proxy = verificationCodeTimeout = 10 initScore = 2000 logPostOnly = true origin = #!! staticBaseUrl = \u0026#34;https://cdn.casbin.org\u0026#34; isDemoMode = false batchSize = 100 ldapServerPort = 389 languages = en,zh,es,fr,de,ja,ko,ru,vi quota = {\u0026#34;organization\u0026#34;: -1, \u0026#34;user\u0026#34;: -1, \u0026#34;application\u0026#34;: -1, \u0026#34;provider\u0026#34;: -1} 置于conf目录下后启动：\ndocker-compose up 服务启动有坑的地方 origin = #!! 如果这里不置空则会强制校验域名，当部署在nginx时后会出现403.\n","permalink":"https://rtx3.com/post/casdoor-installation-run/","tags":["安装","开源服务"],"title":"统一登录开源服务安装"},{"categories":["教程"],"contents":"说明书文档格式写好了，只需要按照框架填充内容。\n第一页「封面」需要修改软件名称和版本号，以V1.0申请；修改作者、负责人以及创建日期和更新日期 第二页「修订历史」根据自己实际情况修改日期和修改者，注意需要和封面日期对应起来，描述改不改无所谓 第三页 「一、简介」第一段根据软件自己修改，1.1 和 1.2 可以不改 「二、用途」2.1 需要根据自己软件修改，2.2 和 2.3 可以不改 「三、运行环境」根据自己软件修改 「四、使用说明」名称改一下就行 从 4.1 一直到 4.xx 就根据自己软件提供截图，描述截图的功能就行，写满 30 页。不够的就把软件功能全部截图描述完就行。 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE\n","permalink":"https://rtx3.com/post/china-code-register-2/","tags":["软著","china"],"title":"APP审核说明书文档"},{"categories":["教程"],"contents":"代码文档注意事项：\n不要有空白行 不要有注释行和注释块，代码结尾处不影响，但是最好也删掉（主要是注释和空白行不能算源代码行数） 建议粘帖后手动整理一下 建议写满 60 页（前 30 页，后 30 页），理论上代码量不足 60 页，全部提交也没问题 字体使用宋体、字号 10、行距 1 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE\n","permalink":"https://rtx3.com/post/china-code-register-3/","tags":["软著","china"],"title":"软著审核代码文档"},{"categories":["教程"],"contents":"一、前期需要准备的： 1、程序源代码（最好60页的源代码文档，pdf 格式） 2、程序运行的截图（用来编写使用说明书）\n二、申请软著 1、打开中国版权保护中心网站：https://www.ccopyright.com.cn/ 2、点击「我要登记」图标 3、点击「立即登记」 4、没有登录的登录或者一下，注意这里有「个人用户」和「机构」。个人就是个人申请，机构一般是公司申请。 5、选择：我是申请人 6、依据自己情况填写软件申请信息 7、依据自己情况填写软件开发信息 8、填写软件功能与特点（注意：有两份文件要上传，1 程序鉴别材料，俗称源代码，2 文档鉴别材料，俗称使用说明书，这两份文档在 repo 中单独给出，并且有很多限制条件，具体看模版） 9、确认信息\n10、填报完成，这里什么都不用点击 11、直接点击右上角「用户中心」继续操作，会看到状态为「待提交材料」的登记记录。 12、点击「打印签章页」，打印出来签字或盖章。再点击「上传签章页」进行上传提交。注意：请勿擅自更改申请确认签章页的内容、格式和打印比例，否则可能会被驳回。 13、点击「查看详情」 14、拉到最下面，点击「查看申请表」，查看需要准备的申请表，当前下载功能正在升级，待升级好了可以点击下载。下载好了签字或盖章。 ","permalink":"https://rtx3.com/post/china-code-register-1/","tags":["软著","china"],"title":"软著审核准备"},{"categories":null,"contents":"","permalink":"https://rtx3.com/archives/","tags":null,"title":""},{"categories":null,"contents":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","permalink":"https://rtx3.com/about/","tags":null,"title":"About"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","permalink":"https://rtx3.com/search/","tags":null,"title":"Search Results"}]