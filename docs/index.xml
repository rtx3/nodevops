<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>繠驖瓕RTX3 文章展示</title>
    <link>https://rtx3.com/</link>
    <description>Recent content on 繠驖瓕RTX3 文章展示</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://rtx3.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Acknowledgements-COOK</title>
      <link>https://rtx3.com/post/acknowledgements-cook/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/acknowledgements-cook/</guid>
      <description>Acknowledgements The iOS version of PickCook depends on the following open source components:
cook MIT License Copyright (c) 2022 云游君 YunYouJun &amp;lt;me@yunyoujun.cn&amp;gt; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;#34;Software&amp;#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</description>
    </item>
    
    <item>
      <title>IOS上架</title>
      <link>https://rtx3.com/post/ios%E4%B8%8A%E6%9E%B6/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/ios%E4%B8%8A%E6%9E%B6/</guid>
      <description>Ionic ios app打包 保证capacitor版本一致：
&amp;#34;@capacitor/android&amp;#34;: &amp;#34;^5.5.1&amp;#34;, &amp;#34;@capacitor/app&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/haptics&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/ios&amp;#34;: &amp;#34;^5.5.1&amp;#34;, &amp;#34;@capacitor/keyboard&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/status-bar&amp;#34;: &amp;#34;^5.0.6&amp;#34; 使用npx cap add ios增加ios打包
确保配置目录正确：
const config: CapacitorConfig = { appId: &amp;#39;com.example.app&amp;#39;, appName: &amp;#39;Example-App&amp;#39;, webDir: &amp;#39;./.output/public&amp;#39;, bundledWebRuntime: false }; App connect 中建立app
图标工场 - 移动应用图标/启动图生成工具，一键生成所有尺寸的应用图标/启动图 (wuruihong.com) 生成appicon
App Tools - Generate icons, images and splashscreens for android and iOS apps (appicononline.com) 启动图
注意事项：
最近大半年上架了 5 个 App ，也踩了不少坑，今天说一下上架的相关问题。 直接不废话，开始内容： 注意点 EULA （最终用户许可协议）。EULA 需要出现在三处地方，有一处是 App Information 页面填写的区域，另外两处分别是 1️⃣ 产品描述的文字部分，2️⃣ App 运行页面中的某处（可以放在设置/关于之类的用户看得到的地方），这是新手上架最容易出问题的地方。 内购。内购分为两种，一种是订阅，一种是非订阅（非订阅包含可消费的（比如游戏道具），和不可被消耗的（比如永久会员））。这些内购必须让用户和 Review 人员知道买了之后是做什么的，如果说明文字隔几秒切换一次说明的那种，一定要让 Review 人员知道这个地方会自己变的，订阅类型必须提供一个可以信服的“持续性的价值”。内购提交有自己的 Notes 和 附件，这个地方可以用截图拼贴说明 Free 用户和付费用户的区别。 注意每次 Review 提交的 Notes 部分，这部分留空也是可以提交 Review 的，但是 Notes 以及附件部分，是 Review 人员不需要和你再次沟通就能获取到信息的地方，这里你可以放入大概的功能说明、技术实现，总之要体现自己人畜无害但是 App 又有独特能力的地方。Review 人员如果有疑问在这里就能解决掉，就不会再次要求你提供信息。 Review 人员经常使用 iPad ，所以 iPad 上运行的时候不要一副低质量的状态。 避免一些歧义词，比如我就提交过“锁屏页面也能使用”之类的文字，想表达锁屏页面的实时活动可以用，结果 Review 人员问锁屏小组件里没有你的东西。 如果只有一个页面且只能展示信息，就会特别难上架，Apple 会觉得你这个服务做成 App 没意义，这种情况建议重新设计功能，添加各种自定义的设置，添加用户的收藏夹之类的有用的功能。 每次提交 Review 都是有可能变更 Review 人员的，所以如果被拒绝了，一定要在回复被拒信息的对话页面重新说明清楚。 善用 ChatGPT 或者类似服务翻译和整理自己想说的内容，说来说去就是为了减少歧义 </description>
    </item>
    
    <item>
      <title>隐私协议-COOK</title>
      <link>https://rtx3.com/post/%E9%9A%90%E7%A7%81%E5%8D%8F%E8%AE%AE-cook/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/%E9%9A%90%E7%A7%81%E5%8D%8F%E8%AE%AE-cook/</guid>
      <description>本应用尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本应用会按照本隐私权政策的规定使用和披露您的个人信息。但本应用将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本应用不会将这些信息对外披露或向第三方提供。本应用会不时更新本隐私权政策。 您在同意本应用服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本应用服务使用协议不可分割的一部分。
适用范围 (a) 在您在使用本应用时，您根据本应用要求提供的个人注册信息；
(b) 在您使用本应用网络服务，或访问本应用平台网页时，本应用自动接收并记录的您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；
(c) 本应用通过合法途径从商业伙伴处取得的用户个人数据。
您了解并同意，以下信息不适用本隐私权政策：
(a) 您在使用本应用平台提供的搜索服务时输入的关键字信息；
(b) 本应用收集到的您在本应用发布的有关信息数据，包括但不限于参与活动、成交信息及评价详情；
(c) 违反法律规定或违反本应用规则行为及本应用已对您采取的措施。
信息使用 (a)本应用不会向任何无关第三方提供、出售、出租、分享或交易您的个人信息，除非事先得到您的许可，或该第三方和本应用（含本应用关联公司）单独或共同为您提供服务，且在该服务结束后，其将被禁止访问包括其以前能够访问的所有这些资料。
(b) 本应用亦不允许任何第三方以任何手段收集、编辑、出售或者无偿传播您的个人信息。任何本应用平台用户如从事上述活动，一经发现，本应用有权立即终止与该用户的服务协议。
(c) 为服务用户的目的，本应用可能通过使用您的个人信息，向您提供您感兴趣的信息，包括但不限于向您发出产品和服务信息，或者与本应用合作伙伴共享信息以便他们向您发送有关其产品和服务的信息（后者需要您的事先同意）。
信息披露 在如下情况下，本应用将依据您的个人意愿或法律的规定全部或部分的披露您的个人信息：
(a) 经您事先同意，向第三方披露；
(b)为提供您所要求的产品和服务，而必须和第三方分享您的个人信息；
(c) 根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；
(d) 如您出现违反中国有关法律、法规或者本应用服务协议或相关规则的情况，需要向第三方披露；
(e) 如您是适格的知识产权投诉人并已提起投诉，应被投诉人要求，向被投诉人披露，以便双方处理可能的权利纠纷；
(f) 在本应用平台上创建的某一交易中，如交易任何一方履行或部分履行了交易义务并提出信息披露请求的，本应用有权决定向该用户提供其交易对方的联络方式等必要信息，以促成交易的完成或纠纷的解决。
(g) 其它本应用根据法律、法规或者网站政策认为合适的披露。
信息存储和交换 本应用收集的有关您的信息和资料将保存在本应用及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本应用收集信息和资料所在地的境外并在境外被访问、存储和展示。
本隐私政策的更改 (a)如果决定更改隐私政策，我们会在本政策中、本公司网站中以及我们认为适当的位置发布这些更改，以便您了解我们如何收集、使用您的个人信息，哪些人可以访问这些信息，以及在什么情况下我们会透露这些信息。
(b)本人保留随时修改本政策的权利，因此请经常查看。如对本政策作出重大更改，本人会通过网站通知的形式告知。</description>
    </item>
    
    <item>
      <title>使用阿里云函数计算反向代理AI服务</title>
      <link>https://rtx3.com/post/nginx-proxy-ai/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/nginx-proxy-ai/</guid>
      <description>使用阿里云函数计算反向代理AI服务 Simon (Yu Ma) 收录于 类别 杂技浅尝
2023-11-17 00:16 2023-11-17 00:16 约 1076 字 预计阅读 3 分钟 392 次阅读 7 条评论
本文的主要思路是使用阿里云的函数计算服务来代理 OpenAI 的 API 地址，配合自己的域名即可在境内实现访问。
至于是不是永久免费，我不知道。但是每个人都有点免费额度，个人做技术探究应该是够用了。
前期准备 需要一个阿里云账号， 没有账号的可自行注册( 点击此处注册 ) 需要一个自己注册的域名， 没有的可以注册 ( 点击注册域名 ) 创建代理服务 1. 登录并开通函数计算服务 登录地址：https://fcnext.console.aliyun.com/overview
2. 通过模板创建Nginx应用 这是整个过程中最重要的一步！
首先在函数计算管理的应用面板，找到创建应用。
选择 通过模板创建应用， 在搜索框输入 Nginx ，找到对应模板 立即创建
填写一些服务关键信息。 这里要注意一下几个点
选择 直接部署 区域选择可以访问OpenAI的区域，例如：日本、美国、新加坡等 函数名、角色等信息不要修改 3 Nginx配置修改 在函数及服务 面板中，找到刚创建的服务，点击进入 Nginx
选择函数代码，并进行编辑，仅修改 nginx.conf 即可， 代码全文如下:
| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 | # nginx -c /code/nginx.</description>
    </item>
    
    <item>
      <title>统一登录开源服务安装</title>
      <link>https://rtx3.com/post/casdoor-installation-run/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/casdoor-installation-run/</guid>
      <description>统一登录开源服务Casdoor部署 统一登录是自动运维的基础以及基石，它可以极大的减少用户的管理成本。
常用的统一登录方式有
AD LDAP CAS OAUTH 开源服务提供了大部分的接入方式，并且依赖简单，值得使用。
当使用在生产环境时，需使用K8S等方式实现高可用。
！当使用在生产环境时，将管理人员使用的登录服务与普通用户使用的登录服务隔离。
Casdoor features Casdoor follows a front-end and back-end separate architecture, developed by Golang. It supports high concurrency, provides a web-based UI for management, and supports localization in 10+ languages. Casdoor supports third-party application login, such as GitHub, Google, QQ, and WeChat, and it supports extending third-party login with plugins. Casdoor supports authorization management based on Casbin. It supports ACL, RBAC, ABAC, and RESTful access control models.</description>
    </item>
    
    <item>
      <title>APP审核说明书文档</title>
      <link>https://rtx3.com/post/china-code-register-2/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-2/</guid>
      <description>说明书文档格式写好了，只需要按照框架填充内容。
第一页「封面」需要修改软件名称和版本号，以V1.0申请；修改作者、负责人以及创建日期和更新日期 第二页「修订历史」根据自己实际情况修改日期和修改者，注意需要和封面日期对应起来，描述改不改无所谓 第三页 「一、简介」第一段根据软件自己修改，1.1 和 1.2 可以不改 「二、用途」2.1 需要根据自己软件修改，2.2 和 2.3 可以不改 「三、运行环境」根据自己软件修改 「四、使用说明」名称改一下就行 从 4.1 一直到 4.xx 就根据自己软件提供截图，描述截图的功能就行，写满 30 页。不够的就把软件功能全部截图描述完就行。 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE</description>
    </item>
    
    <item>
      <title>软著审核代码文档</title>
      <link>https://rtx3.com/post/china-code-register-3/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-3/</guid>
      <description>代码文档注意事项：
不要有空白行 不要有注释行和注释块，代码结尾处不影响，但是最好也删掉（主要是注释和空白行不能算源代码行数） 建议粘帖后手动整理一下 建议写满 60 页（前 30 页，后 30 页），理论上代码量不足 60 页，全部提交也没问题 字体使用宋体、字号 10、行距 1 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE</description>
    </item>
    
    <item>
      <title>软著审核准备</title>
      <link>https://rtx3.com/post/china-code-register-1/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-1/</guid>
      <description>一、前期需要准备的： 1、程序源代码（最好60页的源代码文档，pdf 格式） 2、程序运行的截图（用来编写使用说明书）
二、申请软著 1、打开中国版权保护中心网站：https://www.ccopyright.com.cn/ 2、点击「我要登记」图标 3、点击「立即登记」 4、没有登录的登录或者一下，注意这里有「个人用户」和「机构」。个人就是个人申请，机构一般是公司申请。 5、选择：我是申请人 6、依据自己情况填写软件申请信息 7、依据自己情况填写软件开发信息 8、填写软件功能与特点（注意：有两份文件要上传，1 程序鉴别材料，俗称源代码，2 文档鉴别材料，俗称使用说明书，这两份文档在 repo 中单独给出，并且有很多限制条件，具体看模版） 9、确认信息
10、填报完成，这里什么都不用点击 11、直接点击右上角「用户中心」继续操作，会看到状态为「待提交材料」的登记记录。 12、点击「打印签章页」，打印出来签字或盖章。再点击「上传签章页」进行上传提交。注意：请勿擅自更改申请确认签章页的内容、格式和打印比例，否则可能会被驳回。 13、点击「查看详情」 14、拉到最下面，点击「查看申请表」，查看需要准备的申请表，当前下载功能正在升级，待升级好了可以点击下载。下载好了签字或盖章。 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://rtx3.com/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://rtx3.com/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/about/</guid>
      <description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
https://github.com/yuin/goldmark https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://rtx3.com/post/privacy-policy-cook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/privacy-policy-cook/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://rtx3.com/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
    
  </channel>
</rss>
