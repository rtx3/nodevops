<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on rtx3 文章展示</title>
    <link>https://rtx3.com/post/</link>
    <description>Recent content in Posts on rtx3 文章展示</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://rtx3.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用阿里云函数计算反向代理AI服务</title>
      <link>https://rtx3.com/post/nginx-proxy-ai/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/nginx-proxy-ai/</guid>
      <description>使用阿里云函数计算反向代理AI服务 Simon (Yu Ma) 收录于 类别 杂技浅尝
2023-11-17 00:16 2023-11-17 00:16 约 1076 字 预计阅读 3 分钟 392 次阅读 7 条评论
本文的主要思路是使用阿里云的函数计算服务来代理 OpenAI 的 API 地址，配合自己的域名即可在境内实现访问。
至于是不是永久免费，我不知道。但是每个人都有点免费额度，个人做技术探究应该是够用了。
前期准备 需要一个阿里云账号， 没有账号的可自行注册( 点击此处注册 ) 需要一个自己注册的域名， 没有的可以注册 ( 点击注册域名 ) 创建代理服务 1. 登录并开通函数计算服务 登录地址：https://fcnext.console.aliyun.com/overview
2. 通过模板创建Nginx应用 这是整个过程中最重要的一步！
首先在函数计算管理的应用面板，找到创建应用。
选择 通过模板创建应用， 在搜索框输入 Nginx ，找到对应模板 立即创建
填写一些服务关键信息。 这里要注意一下几个点
选择 直接部署 区域选择可以访问OpenAI的区域，例如：日本、美国、新加坡等 函数名、角色等信息不要修改 3 Nginx配置修改 在函数及服务 面板中，找到刚创建的服务，点击进入 Nginx
选择函数代码，并进行编辑，仅修改 nginx.conf 即可， 代码全文如下:
| 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 | # nginx -c /code/nginx.</description>
    </item>
    
    <item>
      <title>统一登录开源服务安装</title>
      <link>https://rtx3.com/post/casdoor-installation-run/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/casdoor-installation-run/</guid>
      <description>统一登录开源服务Casdoor部署 统一登录是自动运维的基础以及基石，它可以极大的减少用户的管理成本。
常用的统一登录方式有
AD LDAP CAS OAUTH 开源服务提供了大部分的接入方式，并且依赖简单，值得使用。
当使用在生产环境时，需使用K8S等方式实现高可用。
！当使用在生产环境时，将管理人员使用的登录服务与普通用户使用的登录服务隔离。
Casdoor features Casdoor follows a front-end and back-end separate architecture, developed by Golang. It supports high concurrency, provides a web-based UI for management, and supports localization in 10+ languages. Casdoor supports third-party application login, such as GitHub, Google, QQ, and WeChat, and it supports extending third-party login with plugins. Casdoor supports authorization management based on Casbin. It supports ACL, RBAC, ABAC, and RESTful access control models.</description>
    </item>
    
    <item>
      <title>APP审核说明书文档</title>
      <link>https://rtx3.com/post/china-code-register-2/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-2/</guid>
      <description>说明书文档格式写好了，只需要按照框架填充内容。
第一页「封面」需要修改软件名称和版本号，以V1.0申请；修改作者、负责人以及创建日期和更新日期 第二页「修订历史」根据自己实际情况修改日期和修改者，注意需要和封面日期对应起来，描述改不改无所谓 第三页 「一、简介」第一段根据软件自己修改，1.1 和 1.2 可以不改 「二、用途」2.1 需要根据自己软件修改，2.2 和 2.3 可以不改 「三、运行环境」根据自己软件修改 「四、使用说明」名称改一下就行 从 4.1 一直到 4.xx 就根据自己软件提供截图，描述截图的功能就行，写满 30 页。不够的就把软件功能全部截图描述完就行。 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE</description>
    </item>
    
    <item>
      <title>软著审核代码文档</title>
      <link>https://rtx3.com/post/china-code-register-3/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-3/</guid>
      <description>代码文档注意事项：
不要有空白行 不要有注释行和注释块，代码结尾处不影响，但是最好也删掉（主要是注释和空白行不能算源代码行数） 建议粘帖后手动整理一下 建议写满 60 页（前 30 页，后 30 页），理论上代码量不足 60 页，全部提交也没问题 字体使用宋体、字号 10、行距 1 模版链接: https://www.aliyundrive.com/s/pgDX9SAd2GE</description>
    </item>
    
    <item>
      <title>软著审核准备</title>
      <link>https://rtx3.com/post/china-code-register-1/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/china-code-register-1/</guid>
      <description>一、前期需要准备的： 1、程序源代码（最好60页的源代码文档，pdf 格式） 2、程序运行的截图（用来编写使用说明书）
二、申请软著 1、打开中国版权保护中心网站：https://www.ccopyright.com.cn/ 2、点击「我要登记」图标 3、点击「立即登记」 4、没有登录的登录或者一下，注意这里有「个人用户」和「机构」。个人就是个人申请，机构一般是公司申请。 5、选择：我是申请人 6、依据自己情况填写软件申请信息 7、依据自己情况填写软件开发信息 8、填写软件功能与特点（注意：有两份文件要上传，1 程序鉴别材料，俗称源代码，2 文档鉴别材料，俗称使用说明书，这两份文档在 repo 中单独给出，并且有很多限制条件，具体看模版） 9、确认信息
10、填报完成，这里什么都不用点击 11、直接点击右上角「用户中心」继续操作，会看到状态为「待提交材料」的登记记录。 12、点击「打印签章页」，打印出来签字或盖章。再点击「上传签章页」进行上传提交。注意：请勿擅自更改申请确认签章页的内容、格式和打印比例，否则可能会被驳回。 13、点击「查看详情」 14、拉到最下面，点击「查看申请表」，查看需要准备的申请表，当前下载功能正在升级，待升级好了可以点击下载。下载好了签字或盖章。 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://rtx3.com/post/ios%E4%B8%8A%E6%9E%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rtx3.com/post/ios%E4%B8%8A%E6%9E%B6/</guid>
      <description>Ionic ios app打包 保证capacitor版本一致：
&amp;#34;@capacitor/android&amp;#34;: &amp;#34;^5.5.1&amp;#34;, &amp;#34;@capacitor/app&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/haptics&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/ios&amp;#34;: &amp;#34;^5.5.1&amp;#34;, &amp;#34;@capacitor/keyboard&amp;#34;: &amp;#34;^5.0.6&amp;#34;, &amp;#34;@capacitor/status-bar&amp;#34;: &amp;#34;^5.0.6&amp;#34; 使用npx cap add ios增加ios打包
确保配置目录正确：
const config: CapacitorConfig = { appId: &amp;#39;com.example.app&amp;#39;, appName: &amp;#39;Example-App&amp;#39;, webDir: &amp;#39;./.output/public&amp;#39;, bundledWebRuntime: false }; </description>
    </item>
    
  </channel>
</rss>
